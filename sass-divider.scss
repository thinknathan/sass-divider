/*! sass-divider | @license Apache-2.0 LLVM-exception | https://github.com/thinknathan/sass-divider/blob/master/LICENSE.txt */

/**
* Creates visual dividers
*
* $divider-style can be one of:
*   forward
*   back
*   peak
*   valley
*   split
*   round
*   serrated
*   wave
*
* $divider-height is a number in pixels
*
* $divider-bg is any CSS colour
*
* $divider-position can be one of:
*   top-inside
*   bottom-inside
*   top-outside
*   bottom-outside
*
* Requires: rem-calc from Foundation
*/

// Future: add options to Split style to point up or down

@mixin divider(
	$divider-style,
	$divider-height,
	$divider-bg,
	$divider-position
) {
	$divider-top: "true" !default;
	@if $divider-position== "top-inside" or $divider-position== "bottom-outside" {
		$divider-top: "false";
	}
	position: relative;
	/* Before */
	&::before {
		position: absolute;
		content: "";
		z-index: 0;
		pointer-events: none;
		/* Position */
		@if $divider-position== "top-inside" {
			top: 0;
		} @else if $divider-position== "bottom-inside" {
			bottom: 0;
		} @else if $divider-position== "top-outside" {
			top: rem-calc(-$divider-height);
		} @else if $divider-position== "bottom-outside" {
			bottom: rem-calc(-$divider-height);
		}
		left: 0;
		/* Visual Style */
		width: 100%;
		height: rem-calc($divider-height);
		@if $divider-style== "forward" {
			@if $divider-top== "true" {
				background-image: linear-gradient(
					to right bottom,
					transparent 48%,
					$divider-bg 50%
				);
			} @else {
				background-image: linear-gradient(
					to right bottom,
					$divider-bg 50%,
					transparent 52%
				);
			}
		} @else if $divider-style== "back" {
			@if $divider-top== "true" {
				background-image: linear-gradient(
					to right top,
					$divider-bg 48%,
					transparent 50%
				);
			} @else {
				background-image: linear-gradient(
					to right top,
					transparent 48%,
					$divider-bg 50%
				);
			}
		} @else if $divider-style== "peak" {
			width: 50%;
			@if $divider-top== "true" {
				background-image: linear-gradient(
					to right bottom,
					transparent 52%,
					$divider-bg 50%
				);
			} @else {
				background-image: linear-gradient(
					to right top,
					transparent 48%,
					$divider-bg 50%
				);
			}
		} @else if $divider-style== "valley" {
			@if $divider-top== "true" {
				background-image: linear-gradient(
						to right bottom,
						transparent 75%,
						$divider-bg 77%
					),
					linear-gradient(to left bottom, transparent 75%, $divider-bg 77%);
			} @else {
				background-image: linear-gradient(
						to right top,
						transparent 73%,
						$divider-bg 75%
					),
					linear-gradient(to left top, transparent 73%, $divider-bg 75%);
			}
		} @else if $divider-style== "split" {
			width: 50%;
			background-color: $divider-bg;
			@if $divider-top== "true" {
				border-radius: 0 rem-calc($divider-height) 0 0;
			} @else {
				border-radius: 0 0 rem-calc($divider-height) 0;
			}
		} @else if $divider-style== "round" {
			background-color: $divider-bg;
			@if $divider-top== "true" {
				//top: rem-calc(-$divider-height / 2);
				border-radius: 50% 50% 0 0;
			} @else {
				//bottom: rem-calc(-$divider-height / 2);
				border-radius: 0 0 50% 50%;
			}
		} @else if $divider-style== "serrated" {
			background-repeat: repeat-x;
			background-size: rem-calc($divider-height) rem-calc($divider-height);
			@if $divider-top== "true" {
				background-image: linear-gradient(
						-45deg,
						$divider-bg rem-calc($divider-height / 2),
						transparent 0
					),
					linear-gradient(
						45deg,
						$divider-bg rem-calc($divider-height / 2),
						transparent 0
					);
				background-position: left bottom;
			} @else {
				background-image: linear-gradient(
						-45deg,
						transparent rem-calc($divider-height),
						$divider-bg 0
					),
					linear-gradient(
						45deg,
						transparent rem-calc($divider-height),
						$divider-bg 0
					);
				background-position: left top;
			}
		} @else if $divider-style== "wave" {
			background-size: 100% rem-calc($divider-height);
			background-image: inline-svg(
				'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 50" preserveAspectRatio="none"><path d="M100,30 Q70,40 50,30 T0,30 v20 h100Z" style="fill:#{$divider-bg};"/></svg>'
			);
			@if $divider-top== "false" {
				transform: rotate(180deg);
			}
		}
	}

	/* After */
	@if $divider-style== "split" or $divider-style== "peak" {
		&::after {
			position: absolute;
			content: "";
			z-index: 0;
			pointer-events: none;
			/* Position */
			@if $divider-position== "top-inside" {
				top: 0;
			} @else if $divider-position== "bottom-inside" {
				bottom: 0;
			} @else if $divider-position== "top-outside" {
				top: rem-calc(-$divider-height);
			} @else if $divider-position== "bottom-outside" {
				bottom: rem-calc(-$divider-height);
			}
			left: 50%;
			/* Visual Style */
			width: 50%;
			height: rem-calc($divider-height);
			@if $divider-style== "split" {
				background-color: $divider-bg;
				@if $divider-top== "true" {
					border-radius: rem-calc($divider-height) 0 0 0;
				} @else {
					border-radius: 0 0 0 rem-calc($divider-height);
				}
			} @else if $divider-style== "peak" {
				@if $divider-top== "true" {
					background-image: linear-gradient(
						to left bottom,
						transparent 52%,
						$divider-bg 50%
					);
				} @else {
					background-image: linear-gradient(
						to left top,
						transparent 48%,
						$divider-bg 50%
					);
				}
			}
		}
	}
}
